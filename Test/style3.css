*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body{
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: #222;
}

.container{
    transition: all 0.5s ease-in-out;
    position: relative;
    width: 500px;
    height: 500px;
    border-radius: 50%;
    border: solid 2px #fff;
}

.container .icon{
    position: relative;
    left: -50%;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    
} 

.container .icon .box{
    width: 80px;
    height: 80px;
    position: absolute;
    transition: all 0.5s ease-in-out;
    overflow: hidden;
    border-radius: 50%;
    border: solid 2px #ffffff;
    transform: rotate(calc(360deg/8*var(--i)));
    transform-origin: 286px;
    overflow: hidden;
    animation: circle 30s linear infinite;
   
}

   .container .icon .box:hover{
    box-shadow: 0 0px 10px 5px #ffffff;
    
}

.container .icon:hover > .box{
    animation-play-state: paused;
}

/* .container .icon .box:hover .container .icon .box{
    animation-play-state: paused;
} */


.loader{
    margin: auto auto;
    width: 100px;
    height: 100px;
    border: 16px solid #eee;
    border-top: solid 16px goldenrod;
    border-radius: 50%;
    animation: spin 2s linear infinite;
}

/* @keyframes spin {
    from{
        transform: rotate(0deg);
    }

    to{
        transform: rotate(360deg);
    }
    
} */

@keyframes circle {
    100%{
        rotate: 1turn;
    }
}

@media (max-width: 600px){
    .container{
        width: 300px;
        height: 300px;
    }

    /* .container .icon{
        position: relative;
        left: -50%;
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        
    }  */
    .container .icon .box{
        width: 50px;
        height: 50px;
        transform: rotate(calc(360deg/8*var(--i)));
        transform-origin: 170px;
       
    }
}

/* .container .icon .box:nth-child(1) {
    transform: rotate(0deg) translate(-165px) rotate(0deg);
    
    animation-delay: 0.8s;
}

.container .icon .box:nth-child(2) {
    transform: rotate(45deg) translate(-165px) rotate(-45deg);
    
    animation-delay: 0.7s;
}

.container .icon .box:nth-child(3) {
    transform: rotate(90deg) translate(-165px) rotate(-90deg);
    
    animation-delay: 0.6s;
}

.container .icon .box:nth-child(4) {
    transform: rotate(135deg) translate(-165px) rotate(-135deg);
    
    animation-delay: 0.5s;
}

.container .icon .box:nth-child(5) {
    transform: rotate(180deg) translate(-165px) rotate(-180deg);
    
    animation-delay: 0.4s;
}

.container .icon .box:nth-child(6) {
    transform: rotate(225deg) translate(-165px) rotate(-225deg);
    
    animation-delay: 0.3s;
}

.container .icon .box:nth-child(7) {
    transform: rotate(270deg) translate(-165px) rotate(-270deg);
    
    animation-delay: 0.2s;
}

.container .icon .box:nth-child(8) {
    transform: rotate(315deg) translate(-165px) rotate(-315deg);
    
    animation-delay: 0.1s;
} */
/* In this CSS, each box is positioned around the circle with a rotation angle applied. The translate property ensures that the boxes are positioned at a certain distance from the center, and the rotate property rotates them around their own center while revolving around the main circle. This way, they won't collide into one another during the animation. Adjust the rotation angles and distances as needed to fit your design. */





